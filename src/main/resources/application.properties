# Core properties
# Enable debug logs
debug=false 
# Enable trace logs
trace=false 

spring.application.name=springboot-docker-compose

# Uncomment to switch to different server port. By default, Spring Boot Actuator defaults to run on port 8080
server.port: 8080
#management.port: 9001
#management.address: 127.0.0.1

#Enable shutdown endpoint since it's only visible by default via JMX; uncomment line below To enable it as an HTTP endpoint
management.endpoint.shutdown.enabled=true
management.endpoint.metrics.enabled=true
management.endpoints.enabled-by-default=true

# configure Spring Boot to connect to PostgreSQL
## PostgreSQL - connection settings
spring.datasource.url=jdbc:postgresql://localhost:5432/mydb
spring.datasource.username=kulkeez
spring.datasource.password=password

## PostgreSQL  - default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5

spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# create and drop table, good for testing, production set to 'none' or comment it
spring.jpa.hibernate.ddl-auto=create-drop

# app custom property, if true, insert data for testing
app.db.init.enabled=true

# enable query logging
spring.jpa.show-sql=true

spring.docker.compose.profiles.active=dev

# Configure JDBC settings
#spring.jpa.database = MYSQL
#spring.jpa.show-sql = true
#spring.jpa.hibernate.ddl-auto=create

# Customization of the Actuator /info Endpoint
info.app.name=Sample Spring Boot Application to demonstrate using Spring JPA with PostgreSQL database and Spring Boot Docker Compose.
info.app.description=Spring Client Application using Spring Boot to demonstrate how to use PostgreSQL database. 
info.app.version=0.0.1
info.springboot.version=3.3.0
info.app.programmer=Vikram Kulkarni
info.app.uses=Spring Boot Actuator is used which is now technology-agnostic whereas in 1.x it was tied to MVC and Servlet stack

# Actuator 2.x comes with most endpoints disabled; the only two available by default are /health and /info
management.endpoints.web.exposure.include=*
management.endpoints.web.expose=*

# Configure log4j logging
logging.level.root=INFO
logging.level.org.springframework=INFO
logging.level.org.springframework.boot.autoconfigure=INFO

logging.level.org.springframework.web=INFO
logging.level.org.springframework.web.client.RestTemplate=INFO
logging.level.org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping=WARN

logging.level.org.springframework.jdbc=INFO
logging.level.org.springframework.jdbc.core=TRACE
logging.level.org.springframework.jdbc.core.JdbcTemplate=DEBUG
logging.level.org.springframework.jdbc.core.StatementCreatorUtils=TRACE
 
logging.level.org.apache.catalina.loader=WARN
logging.level.org.apache.catalina.mapper=WARN
logging.level.org.springframework.context.support=WARN
logging.level.org.apache.tomcat.util=INFO

# Configure application specific logging 
logging.level.com.kulkeez.demo=DEBUG
